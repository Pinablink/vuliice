;----------------------------------------------------------------------------------------------
#include "msp430g2553.h"     
#include "./../header/VulIice_Oper.h"
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
        NAME   VULIICE_FUNC
        PUBLIC LIMPA_SERIAL_CONTADORES, PROCESSAMENTO_ENTRADA, RETORNO_MENSAGEM, EXCLUIR_MENSAGEM, RETORNO_MENSAGEM, LIMPA_SERIAL_CONTADORES, EXCLUIR_MENSAGEM_ENVIADA, VALIDAR_CONTEUDO
        EXTERN CRIAR_ERROR_ESTRUTURAL_MSG
        RSEG   CODE   
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
LIMPA_SERIAL_CONTADORES
;----------------------------------------------------------------------------------------------
        MOV.W      #00000H,SUPORTE_CONTADOR_SERIAL_1
        MOV.W      #00000H,SUPORTE_CONTADOR_SERIAL_2
        MOV.W      #00000H,SUPORTE_CONTADOR_SERIAL_3
        RET
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
PROCESSAMENTO_ENTRADA
;----------------------------------------------------------------------------------------------
                  MOV.B      #IBYTE_RECEBENDO_DADOS,CONF_STATUS_PROCESS
                  MOV.B      &UCA0RXBUF,CONF_IN_SERIAL_DATA(SUPORTE_CONTADOR_SERIAL_1)      
VER_T1:           //CMP.B      #0DBH,CONF_IN_SERIAL_DATA(CONTADOR_SERIAL_1) 
                  CMP.B      #03BH,CONF_IN_SERIAL_DATA(SUPORTE_CONTADOR_SERIAL_1) 
                  //JEQ        TERMINATOR1
                  JEQ        FINALIZANDO
                  JMP        VER_T2
TERMINATOR1:      INC.B      SUPORTE_CONTADOR_SERIAL_2
                  JMP        VER_FIM   
VER_T2:           CMP.B      #0ABH,CONF_IN_SERIAL_DATA(SUPORTE_CONTADOR_SERIAL_1) 
                  JEQ        TERMINATOR2
                  JMP        VER_FIM   
TERMINATOR2:      INC.B      SUPORTE_CONTADOR_SERIAL_2                  
VER_FIM:          CMP.B      #002H,SUPORTE_CONTADOR_SERIAL_2
                  JEQ        FINALIZANDO
                  JMP        CONTINUE_R1
FINALIZANDO:      MOV.B      #IBYTE_DADOS_RECEBIDOS,&CONF_STATUS_PROCESS
                  MOV.W      #000H,SUPORTE_CONTADOR_SERIAL_2
                  MOV.W      SUPORTE_CONTADOR_SERIAL_1,&LEN_SERIAL_MESSAGE
                  JMP        BYE
CONTINUE_R1:      INC.B      SUPORTE_CONTADOR_SERIAL_1
BYE:              BIC.B      #UCSWRST,&UCA0CTL1 ; 
                  RET 
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
RETORNO_MENSAGEM
;----------------------------------------------------------------------------------------------
                            MOV.W     #00H,SUPORTE_CONTADOR_SERIAL_1
                            MOV.W     #00H,SUPORTE_CONTADOR_SERIAL_2     
INPUT_DATA_TESTE_AT_SEND:   MOV.B     CONF_IN_SERIAL_DATA(SUPORTE_CONTADOR_SERIAL_1),SUPORTE_CONTADOR_SERIAL_2                         
TX_SEND_AT_BUSY:            BIT.B     #UCBUSY,&UCA0STAT
                            JNZ       TX_SEND_AT_BUSY
                            BIS.B     #BIT0,&P1OUT
                            MOV.B     SUPORTE_CONTADOR_SERIAL_2,&UCA0TXBUF
                            BIS.B     #UCA0TXIFG,&IFG2 ; LIBERA A FLAG PARA COMUNICAÇÃO
                            INC.B     SUPORTE_CONTADOR_SERIAL_1
                            CMP.B     &LEN_I_MESSAGE,SUPORTE_CONTADOR_SERIAL_1
                            JNZ       INPUT_DATA_TESTE_AT_SEND
                            MOV.W     #000H,SUPORTE_CONTADOR_SERIAL_1
                            RET
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
EXCLUIR_MENSAGEM
;----------------------------------------------------------------------------------------------
EXC_CARAC:                  MOV.B     #0B0H,CONF_IN_SERIAL_DATA(SUPORTE_CONTADOR_SERIAL_1)
                            INC.B     SUPORTE_CONTADOR_SERIAL_1
                            CMP.B     &LEN_I_MESSAGE,SUPORTE_CONTADOR_SERIAL_1
                            JNZ       EXC_CARAC
                            MOV.W     #000H,SUPORTE_CONTADOR_SERIAL_1
                            RET
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
EXCLUIR_MENSAGEM_ENVIADA
;----------------------------------------------------------------------------------------------
                            MOV.W     &LEN_SERIAL_MESSAGE,SUPORTE_CONTADOR_SERIAL_2
EXC_CARAC1:                 MOV.B     #0B0H,CONF_IN_SERIAL_DATA(SUPORTE_CONTADOR_SERIAL_1)
                            INC.W     SUPORTE_CONTADOR_SERIAL_1
                            CMP.W     SUPORTE_CONTADOR_SERIAL_2,SUPORTE_CONTADOR_SERIAL_1
                            JNZ       EXC_CARAC1
                            MOV.W     #000H,SUPORTE_CONTADOR_SERIAL_1
                            MOV.W     #000H,SUPORTE_CONTADOR_SERIAL_2
                            RET
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
VALIDAR_CONTEUDO
;----------------------------------------------------------------------------------------------
LOOP_VALID:                 CMP.W     #000H,SUPORTE_CONTADOR_SERIAL_1
                            JEQ       VALIDAR_CARAC_1
VALIDAR_CARAC_1:            CMP.B     #07BH,CONF_IN_SERIAL_DATA(SUPORTE_CONTADOR_SERIAL_1)
                            JEQ       CARAC1_OK
ERRO_ESTRUTURAL1:           MOV.B     #IBYTE_ERRO_FORMATO_DADO_SERIAL,&CONF_STATUS_PROCESS
                            MOV.W     &LEN_SERIAL_MESSAGE,SUPORTE_CONTADOR_SERIAL_1
                            JMP       BREAK
CARAC1_OK:                  INC.W     SUPORTE_CONTADOR_SERIAL_1
                            JMP       CONTINUE_OUT
BREAK:                      CMP.W     &LEN_SERIAL_MESSAGE,SUPORTE_CONTADOR_SERIAL_1
                            JNZ       LOOP_VALID
CONTINUE_OUT:               RET
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
        END
;----------------------------------------------------------------------------------------------